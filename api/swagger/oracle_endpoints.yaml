openapi: 3.0.0
info:
  title: Service Layer Oracle API
  description: API documentation for the Oracle service endpoints
  version: 1.0.0
  contact:
    name: R3E Network
    email: support@r3e-network.io

servers:
  - url: https://api.service-layer.io/v1
    description: Production server
  - url: https://staging-api.service-layer.io/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    DataSource:
      type: object
      properties:
        id:
          type: string
          description: Data source ID
          example: "ds-1234"
        name:
          type: string
          description: Data source name
          example: "Weather API"
        description:
          type: string
          description: Data source description
          example: "Provides real-time weather data for locations worldwide"
        url:
          type: string
          description: Base URL for the data source API
          example: "https://api.weatherapi.com/v1"
        authentication_type:
          type: string
          enum: [none, api_key, oauth2, basic]
          description: Authentication type required by the data source
          example: "api_key"
        parameters:
          type: array
          description: Parameters required for data retrieval
          items:
            type: object
            properties:
              name:
                type: string
                description: Parameter name
                example: "location"
              description:
                type: string
                description: Parameter description
                example: "Location name or coordinates"
              required:
                type: boolean
                description: Whether the parameter is required
                example: true
              type:
                type: string
                enum: [string, number, boolean, array, object]
                description: Parameter data type
                example: "string"
        response_format:
          type: string
          enum: [json, xml, csv, text]
          description: Response format from the data source
          example: "json"
        created_at:
          type: string
          format: date-time
          description: When the data source was created
          example: "2023-08-15T12:34:56Z"
        updated_at:
          type: string
          format: date-time
          description: When the data source was last updated
          example: "2023-08-15T12:34:56Z"

    OracleContract:
      type: object
      properties:
        id:
          type: string
          description: Oracle contract ID
          example: "oc-5678"
        user_id:
          type: integer
          description: User ID that owns this oracle contract
          example: 42
        name:
          type: string
          description: Oracle contract name
          example: "Weather Oracle"
        description:
          type: string
          description: Oracle contract description
          example: "Provides weather data to smart contracts"
        contract_hash:
          type: string
          description: NEO smart contract script hash
          example: "0x1234567890abcdef1234567890abcdef12345678"
        data_source_id:
          type: string
          description: Associated data source ID
          example: "ds-1234"
        response_mapping:
          type: object
          description: Mapping from data source response to oracle contract
          example: {
            "temperature": "$.current.temp_c",
            "humidity": "$.current.humidity",
            "condition": "$.current.condition.text"
          }
        update_frequency:
          type: string
          description: How often the oracle data is updated
          example: "1h"
        status:
          type: string
          enum: [active, paused, error]
          description: Current status of the oracle contract
          example: "active"
        created_at:
          type: string
          format: date-time
          description: When the oracle contract was created
          example: "2023-08-15T12:34:56Z"
        updated_at:
          type: string
          format: date-time
          description: When the oracle contract was last updated
          example: "2023-08-15T12:34:56Z"
        last_updated_at:
          type: string
          format: date-time
          description: When the oracle data was last updated
          example: "2023-08-15T13:00:00Z"

    OracleContractCreateRequest:
      type: object
      required:
        - name
        - contract_hash
        - data_source_id
        - response_mapping
        - update_frequency
      properties:
        name:
          type: string
          description: Oracle contract name
          example: "Weather Oracle"
        description:
          type: string
          description: Oracle contract description
          example: "Provides weather data to smart contracts"
        contract_hash:
          type: string
          description: NEO smart contract script hash
          example: "0x1234567890abcdef1234567890abcdef12345678"
        data_source_id:
          type: string
          description: Associated data source ID
          example: "ds-1234"
        response_mapping:
          type: object
          description: Mapping from data source response to oracle contract
          example: {
            "temperature": "$.current.temp_c",
            "humidity": "$.current.humidity",
            "condition": "$.current.condition.text"
          }
        update_frequency:
          type: string
          description: How often the oracle data is updated
          example: "1h"
        parameters:
          type: object
          description: Parameters for the data source
          example: {
            "location": "Sydney"
          }

    OracleHistory:
      type: object
      properties:
        id:
          type: string
          description: History entry ID
          example: "oh-9012"
        oracle_contract_id:
          type: string
          description: Associated oracle contract ID
          example: "oc-5678"
        timestamp:
          type: string
          format: date-time
          description: When the oracle data was updated
          example: "2023-08-15T13:00:00Z"
        data:
          type: object
          description: Oracle data
          example: {
            "temperature": 25.2,
            "humidity": 65,
            "condition": "Partly cloudy"
          }
        tx_hash:
          type: string
          description: Blockchain transaction hash
          example: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
        status:
          type: string
          enum: [success, failure]
          description: Update status
          example: "success"
        error:
          type: string
          description: Error message if status is 'failure'
          example: "Failed to retrieve data from source"

paths:
  /oracle/sources:
    get:
      summary: List data sources
      description: Returns a list of available data sources
      operationId: listDataSources
      tags:
        - Oracle
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of data sources
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      sources:
                        type: array
                        items:
                          $ref: '#/components/schemas/DataSource'
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            description: Total number of data sources
                            example: 42
                          page:
                            type: integer
                            description: Current page number
                            example: 1
                          limit:
                            type: integer
                            description: Number of items per page
                            example: 20
                          pages:
                            type: integer
                            description: Total number of pages
                            example: 3

  /oracle/sources/{id}:
    get:
      summary: Get data source details
      description: Returns details for a specific data source
      operationId: getDataSource
      tags:
        - Oracle
      parameters:
        - name: id
          in: path
          description: Data source ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data source details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/DataSource'
        '404':
          description: Data source not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/sources/{id}/test:
    post:
      summary: Test data source
      description: Tests a data source with provided parameters
      operationId: testDataSource
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Data source ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: object
                  description: Parameters for the data source
                  example: {
                    "location": "Sydney"
                  }
      responses:
        '200':
          description: Test results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      raw_response:
                        type: object
                        description: Raw response from the data source
                      response_time_ms:
                        type: integer
                        description: Response time in milliseconds
                        example: 321
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Data source not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/contracts:
    get:
      summary: List oracle contracts
      description: Returns a list of oracle contracts for the authenticated user
      operationId: listOracleContracts
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: Filter by contract status
          schema:
            type: string
            enum: [active, paused, error]
      responses:
        '200':
          description: List of oracle contracts
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      contracts:
                        type: array
                        items:
                          $ref: '#/components/schemas/OracleContract'
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            description: Total number of contracts
                            example: 42
                          page:
                            type: integer
                            description: Current page number
                            example: 1
                          limit:
                            type: integer
                            description: Number of items per page
                            example: 20
                          pages:
                            type: integer
                            description: Total number of pages
                            example: 3
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
    
    post:
      summary: Create oracle contract
      description: Creates a new oracle contract
      operationId: createOracleContract
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OracleContractCreateRequest'
      responses:
        '201':
          description: Oracle contract created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/OracleContract'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Data source not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/contracts/{id}:
    get:
      summary: Get oracle contract details
      description: Returns details for a specific oracle contract
      operationId: getOracleContract
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Oracle contract details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/OracleContract'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
    
    put:
      summary: Update oracle contract
      description: Updates an existing oracle contract
      operationId: updateOracleContract
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OracleContractCreateRequest'
      responses:
        '200':
          description: Oracle contract updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/OracleContract'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract or data source not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
    
    delete:
      summary: Delete oracle contract
      description: Deletes an existing oracle contract
      operationId: deleteOracleContract
      tags:
        - Oracle
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Oracle contract deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Deleted oracle contract ID
                        example: "oc-5678"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/contracts/{id}/pause:
    post:
      summary: Pause oracle contract
      description: Pauses an active oracle contract
      operationId: pauseOracleContract
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Oracle contract paused successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/OracleContract'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '409':
          description: Oracle contract already paused
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/contracts/{id}/resume:
    post:
      summary: Resume oracle contract
      description: Resumes a paused oracle contract
      operationId: resumeOracleContract
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Oracle contract resumed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/OracleContract'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '409':
          description: Oracle contract already active
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/contracts/{id}/update:
    post:
      summary: Manually update oracle contract
      description: Triggers an immediate update of the oracle contract
      operationId: updateOracleContractData
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Oracle contract updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      contract_id:
                        type: string
                        description: Oracle contract ID
                        example: "oc-5678"
                      updated_at:
                        type: string
                        format: date-time
                        description: When the oracle data was updated
                        example: "2023-08-15T13:00:00Z"
                      tx_hash:
                        type: string
                        description: Blockchain transaction hash
                        example: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                      data:
                        type: object
                        description: Oracle data
                        example: {
                          "temperature": 25.2,
                          "humidity": 65,
                          "condition": "Partly cloudy"
                        }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '409':
          description: Oracle contract is paused or in error state
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /oracle/contracts/{id}/history:
    get:
      summary: Get oracle update history
      description: Returns the update history for a specific oracle contract
      operationId: getOracleHistory
      tags:
        - Oracle
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Oracle contract ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: Filter by update status
          schema:
            type: string
            enum: [success, failure]
      responses:
        '200':
          description: Oracle update history
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      history:
                        type: array
                        items:
                          $ref: '#/components/schemas/OracleHistory'
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            description: Total number of history entries
                            example: 42
                          page:
                            type: integer
                            description: Current page number
                            example: 1
                          limit:
                            type: integer
                            description: Number of items per page
                            example: 20
                          pages:
                            type: integer
                            description: Total number of pages
                            example: 3
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Oracle contract not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error' 