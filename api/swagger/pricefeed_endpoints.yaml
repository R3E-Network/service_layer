openapi: 3.0.0
info:
  title: Service Layer Price Feed API
  description: API documentation for the Price Feed service endpoints
  version: 1.0.0
  contact:
    name: R3E Network
    email: support@r3e-network.io

servers:
  - url: https://api.service-layer.io/v1
    description: Production server
  - url: https://staging-api.service-layer.io/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    PriceData:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair symbol
          example: "BTC/USD"
        price:
          type: number
          format: float
          description: Current price
          example: 50000.0
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the price data
          example: "2023-08-15T12:34:56Z"
        source:
          type: string
          description: Source of the price data
          example: "coinbase"
        volume_24h:
          type: number
          format: float
          description: 24-hour trading volume
          example: 1250000000
        change_24h:
          type: number
          format: float
          description: 24-hour price change percentage
          example: 3.5
        high_24h:
          type: number
          format: float
          description: 24-hour high
          example: 51200.0
        low_24h:
          type: number
          format: float
          description: 24-hour low
          example: 48500.0

    PriceHistoryPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the price data point
          example: "2023-08-15T12:00:00Z"
        price:
          type: number
          format: float
          description: Price at this timestamp
          example: 50000.0
        volume:
          type: number
          format: float
          description: Trading volume at this timestamp
          example: 500000

    PriceAlert:
      type: object
      properties:
        id:
          type: string
          description: Alert ID
          example: "alert-1234"
        user_id:
          type: integer
          description: User ID that owns this alert
          example: 42
        symbol:
          type: string
          description: Trading pair symbol
          example: "BTC/USD"
        condition:
          type: string
          enum: [above, below, percent_change]
          description: Alert condition type
          example: "above"
        threshold:
          type: number
          format: float
          description: Price threshold for the alert
          example: 55000.0
        percent:
          type: number
          format: float
          description: Percent change threshold (if applicable)
          example: 5.0
        status:
          type: string
          enum: [active, triggered, expired, deleted]
          description: Current status of the alert
          example: "active"
        notification_method:
          type: string
          enum: [email, webhook, sms]
          description: Method for alert notification
          example: "email"
        notification_target:
          type: string
          description: Target for notification (email, URL, phone)
          example: "user@example.com"
        created_at:
          type: string
          format: date-time
          description: When the alert was created
          example: "2023-08-15T12:34:56Z"
        expires_at:
          type: string
          format: date-time
          description: When the alert expires (if applicable)
          example: "2023-08-16T12:34:56Z"
        triggered_at:
          type: string
          format: date-time
          description: When the alert was triggered (if applicable)
          example: "2023-08-15T14:22:10Z"

    PriceAlertCreateRequest:
      type: object
      required:
        - symbol
        - condition
        - threshold
        - notification_method
        - notification_target
      properties:
        symbol:
          type: string
          description: Trading pair symbol
          example: "BTC/USD"
        condition:
          type: string
          enum: [above, below, percent_change]
          description: Alert condition type
          example: "above"
        threshold:
          type: number
          format: float
          description: Price threshold for the alert
          example: 55000.0
        percent:
          type: number
          format: float
          description: Percent change threshold (for percent_change condition)
          example: 5.0
        notification_method:
          type: string
          enum: [email, webhook, sms]
          description: Method for alert notification
          example: "email"
        notification_target:
          type: string
          description: Target for notification (email, URL, phone)
          example: "user@example.com"
        expires_at:
          type: string
          format: date-time
          description: When the alert expires (optional)
          example: "2023-08-16T12:34:56Z"

paths:
  /pricefeed/prices:
    get:
      summary: Get current prices
      description: Returns current prices for all supported trading pairs or a specific symbol
      operationId: getCurrentPrices
      tags:
        - Price Feed
      parameters:
        - name: symbol
          in: query
          description: Trading pair symbol (e.g., BTC/USD)
          schema:
            type: string
        - name: source
          in: query
          description: Price source (if not specified, uses default aggregated source)
          schema:
            type: string
      responses:
        '200':
          description: Current price data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      prices:
                        type: array
                        items:
                          $ref: '#/components/schemas/PriceData'
                      timestamp:
                        type: string
                        format: date-time
                        description: Server timestamp
                        example: "2023-08-15T12:34:56Z"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Symbol not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /pricefeed/prices/{symbol}:
    get:
      summary: Get current price for a specific symbol
      description: Returns current price data for a specific trading pair
      operationId: getCurrentPriceBySymbol
      tags:
        - Price Feed
      parameters:
        - name: symbol
          in: path
          description: Trading pair symbol (e.g., BTC/USD)
          required: true
          schema:
            type: string
        - name: source
          in: query
          description: Price source (if not specified, uses default aggregated source)
          schema:
            type: string
      responses:
        '200':
          description: Current price data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PriceData'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Symbol not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /pricefeed/history/{symbol}:
    get:
      summary: Get price history
      description: Returns historical price data for a specific trading pair
      operationId: getPriceHistory
      tags:
        - Price Feed
      parameters:
        - name: symbol
          in: path
          description: Trading pair symbol (e.g., BTC/USD)
          required: true
          schema:
            type: string
        - name: interval
          in: query
          description: Time interval between data points
          schema:
            type: string
            enum: [1m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 12h, 1d, 1w, 1M]
            default: 1h
        - name: start
          in: query
          description: Start timestamp (ISO format or Unix timestamp)
          schema:
            type: string
        - name: end
          in: query
          description: End timestamp (ISO format or Unix timestamp)
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of data points to return
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
        - name: source
          in: query
          description: Price source (if not specified, uses default aggregated source)
          schema:
            type: string
      responses:
        '200':
          description: Historical price data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      symbol:
                        type: string
                        description: Trading pair symbol
                        example: "BTC/USD"
                      interval:
                        type: string
                        description: Time interval between data points
                        example: "1h"
                      history:
                        type: array
                        items:
                          $ref: '#/components/schemas/PriceHistoryPoint'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Symbol not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /pricefeed/symbols:
    get:
      summary: Get supported symbols
      description: Returns a list of all supported trading pair symbols
      operationId: getSupportedSymbols
      tags:
        - Price Feed
      responses:
        '200':
          description: List of supported symbols
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      symbols:
                        type: array
                        items:
                          type: string
                          example: "BTC/USD"
                      categories:
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                        example:
                          crypto: ["BTC/USD", "ETH/USD", "NEO/USD"]
                          forex: ["EUR/USD", "JPY/USD"]
                          commodities: ["GOLD/USD", "OIL/USD"]

  /pricefeed/sources:
    get:
      summary: Get supported price sources
      description: Returns a list of all supported price data sources
      operationId: getSupportedSources
      tags:
        - Price Feed
      responses:
        '200':
          description: List of supported sources
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      sources:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Source identifier
                              example: "coinbase"
                            name:
                              type: string
                              description: Source display name
                              example: "Coinbase"
                            symbols:
                              type: array
                              description: Symbols supported by this source
                              items:
                                type: string
                              example: ["BTC/USD", "ETH/USD", "NEO/USD"]
                            reliability:
                              type: number
                              format: float
                              description: Source reliability score
                              example: 0.95
  
  /pricefeed/alerts:
    get:
      summary: Get price alerts
      description: Returns a list of price alerts for the authenticated user
      operationId: getPriceAlerts
      tags:
        - Price Feed
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by alert status
          schema:
            type: string
            enum: [active, triggered, expired, deleted]
        - name: symbol
          in: query
          description: Filter by trading pair symbol
          schema:
            type: string
      responses:
        '200':
          description: List of price alerts
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      alerts:
                        type: array
                        items:
                          $ref: '#/components/schemas/PriceAlert'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
    
    post:
      summary: Create price alert
      description: Creates a new price alert for the authenticated user
      operationId: createPriceAlert
      tags:
        - Price Feed
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceAlertCreateRequest'
      responses:
        '201':
          description: Price alert created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PriceAlert'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'

  /pricefeed/alerts/{id}:
    get:
      summary: Get price alert details
      description: Returns details for a specific price alert
      operationId: getPriceAlertById
      tags:
        - Price Feed
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Alert ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Price alert details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PriceAlert'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Alert not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
    
    put:
      summary: Update price alert
      description: Updates an existing price alert
      operationId: updatePriceAlert
      tags:
        - Price Feed
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Alert ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceAlertCreateRequest'
      responses:
        '200':
          description: Price alert updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PriceAlert'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Alert not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
    
    delete:
      summary: Delete price alert
      description: Deletes an existing price alert
      operationId: deletePriceAlert
      tags:
        - Price Feed
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Alert ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Price alert deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Deleted alert ID
                        example: "alert-1234"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error'
        '404':
          description: Alert not found
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Error' 